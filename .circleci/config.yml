version: 2

jobs:
  lint-php:
    docker:
      - image: circleci/php:7.3-cli
    steps:
      - checkout
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-bin-cs-fixer-v2-{{ checksum "vendor-bin/php-cs-fixer/composer.lock" }}
            - composer-bin-cs-fixer-v2-
      - run: (cd vendor-bin/php-cs-fixer && composer install --no-interaction)
      - save_cache:
          key: composer-bin-cs-fixer-v2-{{ checksum "vendor-bin/php-cs-fixer/composer.lock" }}
          paths:
            - vendor-bin/php-cs-fixer/vendor
      - run: composer cs-check

  phpstan:
    docker:
      - image: circleci/php:7.3-cli
    steps:
      - checkout
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install --no-interaction --ignore-platform-reqs
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run: composer phpstan

  unit-tests:
    docker:
      - image: circleci/php:7.3-cli
    steps:
      - checkout
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install --no-interaction --ignore-platform-reqs
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run: composer phpunit
      - save_cache:
          key: phpunit-v1
          paths:
            - .phpunit.result.cache

  build-image:
    docker:
      - image: circleci/php:7.3-cli
    steps:
      - checkout
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install --no-interaction --ignore-platform-reqs --no-dev
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          command: |
            docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASS"
            docker build -f support/prod/folkprog-image/Dockerfile -t "$DOCKER_IMAGE_NAME" .
            docker push "${DOCKER_IMAGE_NAME}:latest"

workflows:
  version: 2
  default:
    jobs:
      - lint-php
      - phpstan
      - unit-tests:
          requires:
            - lint-php
            - phpstan
      - build-image:
          requires:
            - unit-tests
          filters:
            branches:
              only:
                - master
